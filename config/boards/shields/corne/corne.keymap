/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define NAV 2
#define FUNC 3
/* #define LED 4 */
#define BT 4

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
    quick_tap_ms = <150>;
};

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <350>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_led {
            timeout-ms = <50>;
            key-positions = <39 40 41>;
            layers = <DEFAULT>;
            bindings = <&mo BT>;
        };
    };

    macros {
        ZMK_MACRO(iqmark,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings =
        <&macro_press &kp RALT>,
        <&macro_tap &kp FSLH>,
        <&macro_release &kp RALT>;
        )

        ZMK_MACRO(iexcl,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings =
        <&macro_press &kp RALT &kp RSHIFT>,
        <&macro_tap &kp N1>,
        <&macro_release &kp RALT &kp RSHIFT>;
        )
    };

    behaviors {
        bel: backspace_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
        // | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ----- | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ |
        // | TAB           | Q             | W             | E             | R             | T             | ----- | Y             | U             | I             | O             | P             | LGUI          |
        // | SHFT          | A             | S             | D             | F             | G             | ----- | H             | J             | K             | L             | ;             | RSHFT         |
        // | CTRL          | Z             | X             | C             | V             | B             | ----- | N             | M             | ,             | .             | _             | RCTRL UNDER   |
        // | ALT ESC       | <NUM> SPC     | <NAV> ENT     |               |               |               |       | RALT CAPS     | B/D           | <FN>          |               |               |               |
            bindings = <
            &kp TAB         &kp Q           &kp W           &kp E           &kp R           &kp T                   &kp Y           &kp U           &kp I           &kp O           &kp P           &kp LGUI
            &kp LSHFT       &kp A           &kp S           &kp D           &kp F           &kp G                   &kp H           &kp J           &kp K           &kp L           &kp SQT         &kp RSHFT
            &kp LCTRL       &kp Z           &kp X           &kp C           &kp V           &kp B                   &kp N           &kp M           &kp COMMA       &kp DOT         &kp SEMI        &mt RCTRL UNDER
            &mt LALT ESC    &lt NUM SPACE   &lt NAV RET                                                           &mt RALT CAPS   &bel            &mo FUNC
            >;
        };

        num_layer {
        // | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ----- | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ |
        // | BSLH          | FSLH          | N7            | N8            | N9            | *             | ----- | AMPS          | LPAR          | RPAR          | &iexcl        | EXCL          |               |
        // | PRCNT         | MINUS         | N4            | N5            | N6            | +             | ----- | PIPE          | LBRC          | RBRC          | &iqmark       | QMARK         |               |
        // | EQUAL         | N0            | N1            | N2            | N3            | DOT           | ----- | CARET         | LBKT          | RBKT          | LT            | GT            | &kp TILDE     |
        // |               |               |               |               |               |               | ----- |               |               |               |               |               |               |
            bindings = <
            &kp BSLH        &kp FSLH        &kp N7          &kp N8          &kp N9          &kp KP_MULTIPLY         &kp AMPS        &kp LPAR        &kp RPAR        &iexcl          &kp EXCL        &trans
            &kp PRCNT       &kp MINUS       &kp N4          &kp N5          &kp N6          &kp KP_PLUS             &kp PIPE        &kp LBRC        &kp RBRC        &iqmark         &kp QMARK       &trans
            &kp EQUAL       &kp N0          &kp N1          &kp N2          &kp N3          &kp DOT                 &kp CARET       &kp LBKT        &kp RBKT        &kp LT          &kp GT          &kp TILDE
            &trans          &trans          &trans                                                                  &trans          &trans          &trans
            >;
        };

        nav_layer {
        // | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ----- | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ |
        // |               | PG_DOWN       | HOME          | ↑             | END           | PG_UP         | ----- | PG_DOWN       | HOME          | ↑             | END           | PG_UP         |               |
        // |               | PRINT SCREEN  | ←             | ↓             | →             |               | ----- | PRINT SCREEN  | ←             | ↓             | →             |               |               |
        // |               | UNDO          | REDO          | BSPC          | DEL           |               | ----- |               |               |               |               |               |               |
        // |               |               |               |               |               |               | ----- |               | DEL           |               |               |               |               |

            bindings = <
            &trans          &kp PAGE_UP     &kp HOME        &kp UP          &kp END         &kp PAGE_DOWN           &kp PAGE_UP     &kp HOME        &kp UP          &kp END         &kp PAGE_DOWN   &trans
            &trans          &kp PSCRN       &kp LEFT        &kp DOWN        &kp RIGHT       &trans                  &kp PSCRN       &kp LEFT        &kp DOWN        &kp RIGHT       &kp GRAVE       &trans
            &trans          &kp K_UNDO      &kp K_REDO      &kp BSPC        &kp DEL         &trans                  &trans          &trans          &trans          &trans          &trans          &trans
            &trans          &trans          &trans                                                                  &trans          &kp DEL         &trans
            >;
        };

        func_layer {
        // | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ----- | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ |
        // |               | '             |               |               |               |               |       |               | F10           | F7            | F8            | F9            |               |
        // |               | @             | $             |               |               |               |       | #             | F11           | F4            | F5            | F6            |               |
        // |               |               |               |               |               |               |       |               | F12           | F1            | F2            | F3            |               |
        // |               |               |               |               |               |               |       |               |               |               |               |               |               |
            bindings = <
            &trans          &trans          &trans          &trans          &trans          &trans                  &trans          &kp F7          &kp F8          &kp F9          &kp F10         &trans
            &trans          &kp AT          &kp DLLR        &trans          &trans          &trans                  &kp HASH        &kp F4          &kp F5          &kp F6          &kp F11         &trans
            &trans          &trans          &trans          &trans          &trans          &trans                  &trans          &kp F1          &kp F2          &kp F3          &kp F12         &trans
            &trans          &trans          &trans                                                                  &trans          &trans          &trans
            >;
        };

        bt_layer {
        // | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ----- | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ |
        // | ON/OFF        | BRI           | BRD           | SPI           | SPD           |               |       |               |               |               |               |               |               |
        // |               | SAI           | SAD           | EFF           | EFR           |               |       |               |               |               |               |               |               |
        // |               | HUI           | HUD           |               |               |               |       |               |               |               |               |               |               |
        // |               |               |               |               |               |               |       |               |               |               |               |               |               |
            bindings = <
            &trans         &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans          &trans
            &trans         &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans          &trans
            &bt BT_CLR     &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans          &bt BT_CLR
            &trans         &trans          &trans                                                                  &trans          &trans          &trans
            >;
        };

        /* led_layer { */
        /* | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ----- | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | ^^^^^^^^^^^^^ | */
        /* | ON/OFF        | BRI           | BRD           | SPI           | SPD           |               |       |               |               |               |               |               |               | */
        /* |               | SAI           | SAD           | EFF           | EFR           |               |       |               |               |               |               |               |               | */
        /* |               | HUI           | HUD           |               |               |               |       |               |               |               |               |               |               | */
        /* |               |               |               |               |               |               |       |               |               |               |               |               |               | */
        /*     bindings = < */
        /*     &rgb_ug RGB_TOG &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_SPI &rgb_ug RGB_SPD &trans                  &trans          &trans          &trans          &trans          &trans          &trans */
        /*     &trans          &rgb_ug RGB_SAI &rgb_ug RGB_SAD &rgb_ug RGB_EFF &rgb_ug RGB_EFR &trans                  &trans          &trans          &trans          &trans          &trans          &trans */
        /*     &bt BT_CLR      &rgb_ug RGB_HUI &rgb_ug RGB_HUD &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans          &bt BT_CLR */
        /*     &trans          &trans          &trans                                                                  &trans          &trans          &trans */
        /*     >; */
        /* }; */
    };
};
